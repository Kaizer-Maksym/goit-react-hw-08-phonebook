{"version":3,"file":"static/js/525.2e6233a0.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactList.jsx","hooks/useFilter.js","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","components/CreateContact/CreateContact.styled.jsx","components/CreateContact/CreateContact.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","hooks/useSubmit.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getFiltr = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const ListOfContacts = styled.ul`\n  display: grid;\n  width: 100%;\n\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(auto-fit, 1fr);\n  grid-gap: 10px;\n\n  position: relative;\n\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  column-gap: 20px;\n\n  padding: 0 5px;\n\n  height: 60px;\n  width: 300px;\n\n  border: 2px solid rgba(13, 92, 92, 0.662);\n  border-radius: 5px;\n\n  font-size: 16px;\n  font-weight: 600;\n\n  text-transform: uppercase;\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const BtnOnDelet = styled.button`\n  display: block;\n  width: 100px;\n  height: 30px;\n\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  box-shadow: 3px 3px 2px rgba(34, 35, 35, 0.662);\n  background-color: rgba(13, 92, 92, 0.662);\n\n  cursor: pointer;\n\n  font-size: 16px;\n  font-weight: 500;\n\n  color: #fdfcfc;\n\n  transition: 250ms linear;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: rgb(255, 107, 8);\n  }\n`;\n\nexport const ContactInfo = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  column-gap: 20px;\n\n  font-size: 15px;\n  font-weight: 700;\n\n  text-transform: uppercase;\n  text-align: right;\n\n  color: rgba(10, 10, 10, 0.689);\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFilter } from 'hooks/useFilter';\nimport {\n  fetchContacts,\n  removeContact,\n} from 'redux/contacts/contacts-operations';\n\nimport {\n  ContactItem,\n  BtnOnDelet,\n  ContactInfo,\n  ListOfContacts,\n} from './ContactsList.styled';\n\nimport { BsTelephoneFill } from 'react-icons/bs';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useFilter();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onRemoveContact = payload => {\n    dispatch(removeContact(payload));\n  };\n\n  return (\n    <ListOfContacts>\n      {visibleContacts &&\n        visibleContacts.map(({ name, number, id }) => (\n          <ContactItem key={id}>\n            {<BsTelephoneFill size=\"15px\" color=\"#00000091\" />}\n            <ContactInfo>\n              <span>{name} </span>\n              <span>{number}</span>\n            </ContactInfo>\n            <BtnOnDelet onClick={() => onRemoveContact(id)}>Delete</BtnOnDelet>\n          </ContactItem>\n        ))}\n    </ListOfContacts>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { getFiltr, getContacts } from '../redux/contacts/contacts-selectors';\n\nexport function useFilter() {\n  const contacts = useSelector(getContacts);\n  const { filter } = useSelector(getFiltr);\n\n  if (contacts) {\n    const getVisibleContact = () => {\n      const normalize = filter.toLowerCase();\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalize)\n      );\n    };\n    const visibleContacts = getVisibleContact();\n\n    return visibleContacts;\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const FilterText = styled.label`\n  position: absolute;\n\n  line-height: 40px;\n  transition: 0.5s;\n  left: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  color: #535050f5;\n`;\n\nexport const FilterInput = styled.input`\n  width: 400px;\n  height: 30px;\n  padding: 5px 10px;\n\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  margin-bottom: 50px;\n\n  box-shadow: 3px 3px 2px rgba(118, 121, 121, 0.662);\n\n  font-size: 16px;\n  font-weight: 600;\n  color: #7d7979f5;\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  FilterText,\n  FilterInput,\n  FilterContainer,\n} from './ContactFilter.styled';\nimport { filterOut } from 'redux/contacts/contacts-slice';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FilterContainer>\n      <FilterText htmlFor=\"filter\"></FilterText>\n      <FilterInput\n        placeholder=\"  Find contacts by name\"\n        id=\"filter\"\n        type=\"text\"\n        onChange={e => dispatch(filterOut(e.target.value))}\n      />\n    </FilterContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Heading = styled.h1`\n  padding: 0;\n  margin: 0;\n\n  font-size: 28px;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const AddContact = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin-bottom: 20px;\n`;\n\nexport const AddButton = styled.button`\n  display: block;\n  margin: 0;\n  padding: 10px;\n\n  background-color: rgba(13, 92, 92, 0.66);\n  box-shadow: 3px 3px 2px rgba(34, 35, 35, 0.66);\n\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  color: rgb(253 252 252);\n  cursor: pointer;\n\n  transition: 250ms linear;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: rgb(255, 107, 8);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Heading, AddContact, AddButton } from './CreateContact.styled';\n\nconst CreateContact = ({ setActive }) => {\n  return (\n    <AddContact>\n      <Heading>Contacts</Heading>\n      <AddButton type=\"button\" onClick={() => setActive(true)}>\n        Create contact\n      </AddButton>\n    </AddContact>\n  );\n};\n\nexport default CreateContact;\n\nCreateContact.propTypes = {\n  setActive: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormBtn = styled.button`\n  display: block;\n  width: 100%;\n  height: 40px;\n\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  background-color: rgba(13, 92, 92, 0.66);\n  box-shadow: 3px 3px 2px rgba(34, 35, 35, 0.66);\n\n  font-size: 16px;\n  font-weight: 500;\n\n  cursor: pointer;\n\n  color: #fdfcfc;\n  transition: 250ms linear;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: rgb(255, 107, 8);\n  }\n`;\n\nexport const InputContact = styled.input`\n  margin-bottom: 25px;\n  padding: 5px 10px;\n  width: 250px;\n  height: 25px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 2px 3px 1px rgba(0, 0, 0, 0.1), 2px 3px 2px rgba(0, 0, 0, 0.1),\n    2px 3px 2px rgba(0, 0, 0, 0.1);\n`;\n\nexport const FormText = styled.p`\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: 600;\n\n  text-transform: uppercase;\n`;\n","import {\n  FormBtn,\n  FormText,\n  FormStyle,\n  InputContact,\n} from './ContactForm.styled';\nimport { useSubmit } from 'hooks/useSubmit';\n\nexport const ContactsForm = () => {\n  const onSubmit = useSubmit();\n  return (\n    <FormStyle autoCapitalize=\"off\" onSubmit={onSubmit}>\n      <FormText>Name</FormText>\n      <label>\n        <InputContact\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <FormText>Number</FormText>\n      <label>\n        <InputContact\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <FormBtn type=\"submit\">Add contact</FormBtn>\n    </FormStyle>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { addContact } from '../redux/contacts/contacts-operations';\n\nexport function useSubmit(e) {\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n\n    const data = {\n      name: name,\n      number: number,\n    };\n    dispatch(addContact(data));\n\n    e.target.reset();\n  };\n\n  return onSubmit;\n}\n","import styled from '@emotion/styled';\n\nexport const ModalContainer = styled.div`\n  display: block;\n  padding: 20px;\n  height: 250px;\n  border-radius: 10px;\n  background-color: rgba(85, 154, 218, 0.8);\n`;\n\nexport const ModalClose = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n\n  border: none;\n  outline: none;\n  background-color: transparent;\n\n  cursor: pointer;\n\n  transition: 250ms linear;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover > svg,\n  :focus > svg {\n    color: #ffffff;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContactsForm } from 'components/ContactForm/ContactForm';\nimport { ModalContainer, ModalClose } from './Modal.styled';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport './modal.css';\n\nconst Modal = ({ active, setActive }) => {\n  return (\n    <ModalContainer\n      className={active ? 'modal active' : 'modal'}\n      onClick={e => e.stopPropagation()}\n    >\n      <ModalClose type=\"button\" onClick={() => setActive(false)}>\n        <AiOutlineCloseCircle size=\"2em\" />\n      </ModalClose>\n      <ContactsForm />\n    </ModalContainer>\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  active: PropTypes.bool,\n  setActive: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const AppContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n\n  grid-column-gap: 100px;\n\n  margin-right: auto;\n  margin-left: auto;\n  padding-top: 50px;\n`;\n\nexport const List = styled.div`\n  padding: 30px;\n  background-color: #559adadd;\n  border-radius: 10px;\n  box-shadow: 4px 4px 3px rgba(114, 116, 116, 0.8);\n`;\n","import { useState } from 'react';\nimport { ContactsList } from '../../components/ContactList/ContactList';\nimport { ContactFilter } from '../../components/ContactFilter/ContactFilter';\nimport CreateContact from '../../components/CreateContact/CreateContact';\nimport Modal from 'components/Modal/Modal';\n\nimport { AppContainer, List } from './Contacts.styled';\n\nconst Contacts = () => {\n  const [modalActive, setModalActive] = useState(false);\n\n  return (\n    <AppContainer>\n      <List>\n        <CreateContact setActive={setModalActive} />\n        <ContactFilter />\n        <ContactsList />\n      </List>\n      <Modal active={modalActive} setActive={setModalActive} />\n    </AppContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getFiltr","filter","ListOfContacts","styled","ContactItem","BtnOnDelet","ContactInfo","ContactsList","dispatch","useDispatch","visibleContacts","useSelector","normalize","toLowerCase","contact","name","includes","getVisibleContact","useFilter","useEffect","fetchContacts","map","number","id","size","color","onClick","payload","removeContact","FilterText","FilterInput","FilterContainer","ContactFilter","htmlFor","placeholder","type","onChange","e","filterOut","target","value","Heading","AddContact","AddButton","setActive","FormStyle","FormBtn","InputContact","FormText","ContactsForm","onSubmit","preventDefault","data","addContact","reset","useSubmit","autoCapitalize","pattern","title","required","ModalContainer","ModalClose","active","className","stopPropagation","AppContainer","List","useState","modalActive","setModalActive"],"sourceRoot":""}